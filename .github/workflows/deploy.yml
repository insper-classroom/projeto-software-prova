name: Deploy AWS

on:
  push:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      packages: write

    steps:
      - name: Clone do projeto
        uses: actions/checkout@v4
        
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
          settings-path: ${{ github.workspace }} # location for the settings.xml file
          
      - name: Build with Maven
        run: mvn clean install

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: "carolinaeskenazi"
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: carolinaeskenazi/curso-ci:${{ github.sha }}

      - name: Deploy na AWS via SSH
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST_TEST }}
          username: "ubuntu"
          key: ${{ secrets.KEY_TEST }}
          port: 22
          script: |
            # Cria rede se não existir
            docker network create rede || true

            # Sobe ou recria MySQL
            docker stop mysql || true
            docker rm mysql || true
            docker run -d --name mysql --network=rede \
              -e MYSQL_ROOT_PASSWORD=root \
              -e MYSQL_DATABASE=curso \
              -p 3306:3306 mysql:8.0

            # Sobe ou recria a aplicação
            docker stop curso || true
            docker rm curso || true
            docker run -d -p 8080:8080 --name curso --network=rede \
              carolinaeskenazi/curso-ci:${{ github.sha }}
